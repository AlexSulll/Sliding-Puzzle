DROP TABLE MOVE_HISTORY;
DROP TABLE GAMES;
DROP TABLE DAILY_CHALLENGES;
DROP TABLE USER_IMAGES;
DROP TABLE USERS;
commit;

DROP SEQUENCE DAILY_CHALLENGES_SEQ;
DROP SEQUENCE MOVE_HISTORY_SEQ;
DROP SEQUENCE GAMES_SEQ;
DROP SEQUENCE USER_IMAGES_SEQ;
DROP SEQUENCE USERS_SEQ;

commit;

CREATE SEQUENCE USERS_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE TABLE USERS (
    USER_ID       INT PRIMARY KEY,
    USERNAME      VARCHAR2(50) NOT NULL,
    PASSWORD_HASH VARCHAR2(64) NOT NULL,
    LAST_SEEN     DATE NOT NULL,
    
    CONSTRAINT UQ_USERS_USERNAME UNIQUE (USERNAME)
);

CREATE SEQUENCE USER_IMAGES_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE TABLE USER_IMAGES (
    IMAGE_ID      INT PRIMARY KEY,
    USER_ID       INT,
    MIME_TYPE     VARCHAR2(10) NOT NULL,
    IMAGE_DATA    BLOB,
    FILE_PATH     VARCHAR2(512),
    UPLOADED_AT   DATE NOT NULL,
    IMAGE_HASH    VARCHAR2(64),
    
    CONSTRAINT FK_USER_IMAGES_USER FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT UQ_USER_IMAGE_HASH UNIQUE (USER_ID, IMAGE_HASH)
);

CREATE SEQUENCE DAILY_CHALLENGES_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE TABLE DAILY_CHALLENGES (
    CHALLENGE_ID    INT PRIMARY KEY,
    CHALLENGE_DATE  DATE NOT NULL,
    BOARD_SIZE      INT NOT NULL,
    SHUFFLE_MOVES   INT NOT NULL,
    IMAGE_ID        INT,
    BOARD_STATE     VARCHAR2(120) NOT NULL,
    OPTIMAL_MOVES   INT NOT NULL,
    
    CONSTRAINT FK_DAILY_CHALLENGES_IMAGE FOREIGN KEY (IMAGE_ID) REFERENCES USER_IMAGES(IMAGE_ID),
    CONSTRAINT UQ_CHALLENGE_DATE UNIQUE (CHALLENGE_DATE)
);

CREATE SEQUENCE GAMES_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE TABLE GAMES (
    GAME_ID             INT PRIMARY KEY,
    USER_ID             INT NOT NULL,
    STATUS              VARCHAR2(10) NOT NULL,
    BOARD_SIZE          INT NOT NULL,
    SHUFFLE_MOVES       INT NOT NULL,
    GAME_MODE           VARCHAR2(5) NOT NULL,
    MOVE_COUNT          INT DEFAULT 0 NOT NULL,
    IMAGE_ID            INT,
    CHALLENGE_ID        INT,
    START_TIME          DATE NOT NULL,
    COMPLETED_AT        DATE,
    STARS_EARNED        INT,
    OPTIMAL_MOVES       INT NOT NULL,
    CURRENT_MOVE_ORDER  INT,
    INITIAL_BOARD_STATE VARCHAR2(120) NOT NULL,
    
    CONSTRAINT FK_GAMES_USER FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    CONSTRAINT FK_GAMES_IMAGE FOREIGN KEY (IMAGE_ID) REFERENCES USER_IMAGES(IMAGE_ID),
    CONSTRAINT FK_GAMES_CHALLENGE FOREIGN KEY (CHALLENGE_ID) REFERENCES DAILY_CHALLENGES(CHALLENGE_ID),
    CONSTRAINT CHK_GAMES_STATUS CHECK (STATUS IN ('ACTIVE', 'SOLVED', 'ABANDONED', 'TIMEOUT')),
    CONSTRAINT CHK_GAMES_GAMEMODE CHECK (GAME_MODE IN ('INTS', 'IMAGE'))
);

CREATE SEQUENCE MOVE_HISTORY_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE TABLE MOVE_HISTORY (
    MOVE_ID        INT PRIMARY KEY,
    GAME_ID        INT NOT NULL,
    MOVE_ORDER     INT NOT NULL,
    BOARD_STATE    VARCHAR2(120) NOT NULL,
    
    CONSTRAINT FK_MOVE_HISTORY_GAME FOREIGN KEY (GAME_ID) REFERENCES GAMES(GAME_ID),
    CONSTRAINT UQ_GAME_MOVE_ORDER UNIQUE (GAME_ID, MOVE_ORDER)
);

COMMIT;